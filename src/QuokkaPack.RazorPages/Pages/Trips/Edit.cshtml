@page
@model QuokkaPack.RazorPages.Pages.Trips.EditModel
@{
    ViewData["Title"] = "Edit Trip Items";

    var groupedItems = Model.ExistingItems
        .GroupBy(i => i.ItemReadDto.Categories.First().Name)
        .OrderBy(g => g.Key);
}

<div class="container mt-4">
    <div class="p-3 rounded bg-light border">
        <form method="post" 
            asp-page-handler="UpdateTrip"
            asp-route-tripId="@Model.Trip.Id">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="TripEdit.Id" type="hidden" />
            <!-- Destination row -->
            <div class="row mb-3">
                <div class="col-md-2 d-flex align-items-center">
                    <label asp-for="Trip.Destination" class="form-label fw-semibold mb-0 text-end w-100"></label>
                </div>
                <div class="col-md-10">
                    <input asp-for="Trip.Destination" class="form-control" />
                    <span asp-validation-for="Trip.Destination" class="text-danger"></span>
                </div>
            </div>

            <!-- Start/End Dates -->
            <div class="row mb-3">
                <div class="col-md-2 d-flex align-items-center">
                    <label asp-for="Trip.StartDate" class="form-label fw-semibold mb-0 text-end w-100"></label>
                </div>
                <div class="col-md-4">
                    <input asp-for="Trip.StartDate" class="form-control" type="date" />
                    <span asp-validation-for="Trip.StartDate" class="text-danger"></span>
                </div>
                <div class="col-md-2 d-flex align-items-center">
                    <label asp-for="Trip.EndDate" class="form-label fw-semibold mb-0 text-end w-100"></label>
                </div>
                <div class="col-md-4">
                    <input asp-for="Trip.EndDate" class="form-control" type="date" />
                    <span asp-validation-for="Trip.EndDate" class="text-danger"></span>
                </div>
            </div>

            <div class="text-end">
                <button type="submit" class="btn btn-primary">Update Trip</button>
                <a asp-page="/Trips/Pack" asp-route-id="@Model.Trip.Id" class="btn btn-outline-success ms-2">Back to Packing</a>

            </div>
        </form>
    </div>
</div>

<!-- Trip items by category -->
<div class="container mt-4">
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach (var categoryGroup in groupedItems)
        {
            var categoryName = categoryGroup.Key;
            var categoryId = categoryGroup.First().ItemReadDto.Categories.First().Id;

            <div class="col">
                <div class="card h-100">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <label class="form-check-label fw-bold mb-0" for="@categoryId">@categoryName</label>
                        <form method="post"
                              asp-page-handler="DeleteCategory"
                              asp-route-categoryName="@categoryName"
                              class="m-0"
                              onsubmit="return confirm('Are you sure you want to delete this category?');">

                            <button type="submit" class="btn btn-sm" title="Delete Category">
                                <i class="bi bi-trash delete-icon"></i>
                            </button>
                        </form>
                    </div>
                    <div class="card-body">
                        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-2">
                            @foreach (var item in categoryGroup)
                            {
                                var index = Model.ExistingItems.IndexOf(item);
                                var checkboxId = $"item_{item.Id}";
                                <form method="post"
                                      asp-page-handler="DeleteItem"
                                      asp-route-itemId="@item.Id"
                                      asp-route-tripId="@Model.Trip.Id"
                                      class="ms-2"
                                      onsubmit="return confirm('Are you sure you want to delete this item?');">
                                    <div class="col d-flex align-items-start justify-content-between">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox"
                                                   id="@checkboxId"
                                                   disabled
                                                   name="UpdatedItems[@index].IsPacked"
                                                   value="true" @(item.IsPacked ? "checked" : "")
                                                   style="color: inherit; opacity: 1;" />
                                            <button type="submit" class="btn btn-sm" title="Delete Item">
                                                <i class="bi bi-trash delete-icon"></i>
                                            </button>
                                            <label class="form-check-label text-body" for="@checkboxId" style="color: inherit; opacity: 1;">
                                                @item.ItemReadDto.Name
                                            </label>
                                        </div>


                                    </div>
                                </form>
                            }

                            @* TODO: This is very messy. Create a specific DTO that contains all the information in one place *@
                            @foreach (var item in Model.AllCategories
                                                    .Single(category => category.Name == categoryGroup.Key)
                                                    .Items
                                                    .Where(item => !Model.ExistingItems.Any(existing => existing.ItemReadDto.Id == item.Id)))
                            {
                                var checkboxId = $"item_{item.Id}";
                                <form method="post"
                                      asp-page-handler="AddItem"
                                      asp-route-itemId="@item.Id"
                                      asp-route-tripId="@Model.Trip.Id"
                                      class="ms-2">
                                    <div class="col d-flex align-items-start justify-content-between">
                                        <div class="form-check">
                                            <button type="submit" class="btn btn-sm" title="Delete Item">
                                                <i class="bi bi-plus-circle-fill delete-icon"></i>
                                            </button>
                                            <label class="form-check-label text-body" for="@checkboxId" style="color: inherit; opacity: 1; text-decoration: line-through;">
                                                @item.Name
                                            </label>
                                        </div>


                                    </div>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="col">
            <div class="card h-100">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <label class="form-check-label fw-bold mb-0">Availalbe categories</label>
                </div>
                <div class="card-body">
                    @{
                        var categoryNames = Model.ExistingItems.Select(i => i.ItemReadDto.Categories.First().Name).Distinct();
                        foreach (var availableCategory in Model.AllCategories.Where(c => !categoryNames.Contains(c.Name)).ToList())
                        {
                            <form method="post"
                                  asp-page-handler="AddCategory"
                                  asp-route-categoryId="@availableCategory.Id"
                                  asp-route-tripId="@Model.Trip.Id"
                                  class="ms-2">
                                <div class="col d-flex align-items-start justify-content-between">
                                    <div class="form-check">
                                        <button type="submit" class="btn btn-sm" title="Add Category">
                                            <i class="bi bi-plus-circle-fill delete-icon"></i>
                                        </button>
                                        <label class="form-check-label text-body" style="">
                                            @availableCategory.Name
                                        </label>
                                    </div>
                                </div>
                            </form>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
