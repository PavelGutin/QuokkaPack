/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["LoginModel"];
                    "text/json": components["schemas"]["LoginModel"];
                    "application/*+json": components["schemas"]["LoginModel"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RegisterRequest"];
                    "text/json": components["schemas"]["RegisterRequest"];
                    "application/*+json": components["schemas"]["RegisterRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CategoryReadDto"][];
                        "application/json": components["schemas"]["CategoryReadDto"][];
                        "text/json": components["schemas"]["CategoryReadDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CategoryCreateDto"];
                    "text/json": components["schemas"]["CategoryCreateDto"];
                    "application/*+json": components["schemas"]["CategoryCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CategoryReadDto"];
                        "application/json": components["schemas"]["CategoryReadDto"];
                        "text/json": components["schemas"]["CategoryReadDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["CategoryReadDto"];
                        "application/json": components["schemas"]["CategoryReadDto"];
                        "text/json": components["schemas"]["CategoryReadDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CategoryEditDto"];
                    "text/json": components["schemas"]["CategoryEditDto"];
                    "application/*+json": components["schemas"]["CategoryEditDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ItemReadDto"][];
                        "application/json": components["schemas"]["ItemReadDto"][];
                        "text/json": components["schemas"]["ItemReadDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ItemCreateDto"];
                    "text/json": components["schemas"]["ItemCreateDto"];
                    "application/*+json": components["schemas"]["ItemCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ItemReadDto"];
                        "application/json": components["schemas"]["ItemReadDto"];
                        "text/json": components["schemas"]["ItemReadDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Items/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ItemReadDto"];
                        "application/json": components["schemas"]["ItemReadDto"];
                        "text/json": components["schemas"]["ItemReadDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ItemEditDto"];
                    "text/json": components["schemas"]["ItemEditDto"];
                    "application/*+json": components["schemas"]["ItemEditDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/setup/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/setup/init": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["SetupRequest"];
                    "text/json": components["schemas"]["SetupRequest"];
                    "application/*+json": components["schemas"]["SetupRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/Categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": number;
                    "text/json": number;
                    "application/*+json": number;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/Categories/batch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": number[];
                    "text/json": number[];
                    "application/*+json": number[];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": number[];
                    "text/json": number[];
                    "application/*+json": number[];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/Categories/{categoryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                    categoryId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/Categories/{categoryId}/reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                    categoryId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/TripItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TripItemReadDto"][];
                        "application/json": components["schemas"]["TripItemReadDto"][];
                        "text/json": components["schemas"]["TripItemReadDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TripItemCreateDto"];
                    "text/json": components["schemas"]["TripItemCreateDto"];
                    "application/*+json": components["schemas"]["TripItemCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/TripItems/{tripItemId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                    tripItemId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TripItemEditDto"];
                    "text/json": components["schemas"]["TripItemEditDto"];
                    "application/*+json": components["schemas"]["TripItemEditDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                    tripItemId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{tripId}/TripItems/batch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    tripId: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TripItemEditDto"][];
                    "text/json": components["schemas"]["TripItemEditDto"][];
                    "application/*+json": components["schemas"]["TripItemEditDto"][];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/ping": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TripReadDto"][];
                        "application/json": components["schemas"]["TripReadDto"][];
                        "text/json": components["schemas"]["TripReadDto"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TripCreateDto"];
                    "text/json": components["schemas"]["TripCreateDto"];
                    "application/*+json": components["schemas"]["TripCreateDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TripReadDto"];
                        "application/json": components["schemas"]["TripReadDto"];
                        "text/json": components["schemas"]["TripReadDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Trips/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TripReadDto"];
                        "application/json": components["schemas"]["TripReadDto"];
                        "text/json": components["schemas"]["TripReadDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TripEditDto"];
                    "text/json": components["schemas"]["TripEditDto"];
                    "application/*+json": components["schemas"]["TripEditDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/WeatherForecast": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["GetWeatherForecast"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AppUserLogin: {
            /** Format: int32 */
            id?: number;
            provider?: string | null;
            providerUserId?: string | null;
            issuer?: string | null;
            email?: string | null;
            displayName?: string | null;
            /** Format: uuid */
            masterUserId?: string;
            masterUser?: components["schemas"]["MasterUser"];
        };
        Category: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            isDefault?: boolean;
            /** Format: uuid */
            masterUserId?: string;
            masterUser?: components["schemas"]["MasterUser"];
            items?: components["schemas"]["Item"][] | null;
        };
        CategoryCreateDto: {
            name?: string | null;
            description?: string | null;
            isDefault?: boolean;
        };
        CategoryEditDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            description?: string | null;
            isDefault?: boolean;
        };
        CategoryReadDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            description?: string | null;
            isDefault?: boolean;
        };
        CategoryReadDtoSimple: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            description?: string | null;
            isDefault?: boolean;
        };
        Item: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            /** Format: uuid */
            masterUserId?: string;
            masterUser?: components["schemas"]["MasterUser"];
            category?: components["schemas"]["Category"];
            /** Format: int32 */
            categoryId?: number;
            tripItems?: components["schemas"]["TripItem"][] | null;
        };
        ItemCreateDto: {
            name?: string | null;
            notes?: string | null;
            isEssential?: boolean;
            /** Format: int32 */
            categoryId?: number;
        };
        ItemEditDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            notes?: string | null;
            isEssential?: boolean;
            category?: components["schemas"]["Category"];
        };
        ItemReadDto: {
            /** Format: int32 */
            id?: number;
            name?: string | null;
            notes?: string | null;
            isEssential?: boolean;
            category?: components["schemas"]["CategoryReadDtoSimple"];
        };
        LoginModel: {
            email?: string | null;
            password?: string | null;
        };
        MasterUser: {
            /** Format: uuid */
            id?: string;
            /** Format: date-time */
            createdAt?: string;
            identityUserId?: string | null;
            logins?: components["schemas"]["AppUserLogin"][] | null;
            trips?: components["schemas"]["Trip"][] | null;
            items?: components["schemas"]["Item"][] | null;
            categories?: components["schemas"]["Category"][] | null;
        };
        RegisterRequest: {
            email?: string | null;
            password?: string | null;
        };
        SetupRequest: {
            username?: string | null;
            password?: string | null;
        };
        Trip: {
            /** Format: int32 */
            id?: number;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            destination?: string | null;
            /** Format: uuid */
            masterUserId?: string;
            masterUser?: components["schemas"]["MasterUser"];
            tripItems?: components["schemas"]["TripItem"][] | null;
        };
        TripCreateDto: {
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            destination?: string | null;
            categoryIds?: number[] | null;
        };
        TripEditDto: {
            /** Format: int32 */
            id?: number;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            destination?: string | null;
        };
        TripItem: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            itemId?: number;
            item?: components["schemas"]["Item"];
            /** Format: int32 */
            tripId?: number;
            trip?: components["schemas"]["Trip"];
            isPacked?: boolean;
        };
        TripItemCreateDto: {
            /** Format: int32 */
            itemId?: number;
            isPacked?: boolean;
        };
        TripItemEditDto: {
            /** Format: int32 */
            id?: number;
            isPacked?: boolean;
        };
        TripItemReadDto: {
            /** Format: int32 */
            id?: number;
            itemReadDto?: components["schemas"]["ItemReadDto"];
            isPacked?: boolean;
        };
        TripReadDto: {
            /** Format: int32 */
            id?: number;
            destination?: string | null;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            categories?: string[] | null;
        };
        WeatherForecast: {
            /** Format: date */
            date?: string;
            /** Format: int32 */
            temperatureC?: number;
            /** Format: int32 */
            readonly temperatureF?: number;
            summary?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetWeatherForecast: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": components["schemas"]["WeatherForecast"][];
                    "application/json": components["schemas"]["WeatherForecast"][];
                    "text/json": components["schemas"]["WeatherForecast"][];
                };
            };
        };
    };
}
