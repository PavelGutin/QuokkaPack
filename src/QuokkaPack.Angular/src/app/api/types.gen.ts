// Auto-generated TypeScript types from C# models
// Do not edit this file manually - it will be overwritten

export enum ItemTripStatus {
  Packed = 0,
  Unpacked = 1,
  AvailableToAdd = 2,
}

export interface Trip {
  id: number;
  startDate: string;
  endDate: string;
  destination?: string;
  masterUserId: string;
  masterUser?: MasterUser;
  tripItems?: TripItem[];
}

export interface Category {
  id: number;
  name?: string;
  isDefault: boolean;
  masterUserId: string;
  masterUser?: MasterUser;
  items?: Item[];
}

export interface Item {
  id: number;
  name?: string;
  masterUserId: string;
  masterUser?: MasterUser;
  category?: Category;
  categoryId: number;
  tripItems?: TripItem[];
}

export interface TripItem {
  id: number;
  itemId: number;
  item?: Item;
  tripId: number;
  trip?: Trip;
  isPacked: boolean;
}

export interface MasterUser {
  id: string;
  createdAt: string;
  identityUserId?: string;
  logins?: AppUserLogin[];
  trips?: Trip[];
  items?: Item[];
  categories?: Category[];
}

export interface AppUserLogin {
  id: number;
  provider?: string;
  providerUserId?: string;
  issuer?: string;
  email?: string;
  displayName?: string;
  masterUserId: string;
  masterUser?: MasterUser;
}

export interface TripSummaryReadDto {
  id: number;
  destination?: string;
  startDate: string;
  endDate: string;
}

export interface TripDetailsReadDto {
  id: number;
  destination?: string;
  startDate: string;
  endDate: string;
  items?: TripCatalogItemReadDto[];
}

export interface TripEditDto {
  id: number;
  startDate: string;
  endDate: string;
  destination?: string;
}

export interface TripCreateDto {
  startDate: string;
  endDate: string;
  destination?: string;
  categoryIds?: number[];
}

export interface CategoryReadDto {
  id: number;
  name?: string;
  description?: string;
  isDefault: boolean;
}

export interface CategoryReadDtoSimple {
  id: number;
  name?: string;
  description?: string;
  isDefault: boolean;
}

export interface CategoryCreateDto {
  name?: string;
  description?: string;
  isDefault: boolean;
}

export interface CategoryEditDto {
  id: number;
  name?: string;
  description?: string;
  isDefault: boolean;
}

export interface ItemReadDto {
  id: number;
  name?: string;
  notes?: string;
  isEssential: boolean;
  category?: CategoryReadDtoSimple;
}

export interface ItemCreateDto {
  name?: string;
  notes?: string;
  isEssential: boolean;
  categoryId: number;
}

export interface ItemEditDto {
  id: number;
  name?: string;
  notes?: string;
  isEssential: boolean;
  category?: Category;
}

export interface TripItemReadDto {
  id: number;
  itemReadDto?: ItemReadDto;
  isPacked: boolean;
}

export interface TripItemCreateDto {
  itemId: number;
  isPacked: boolean;
}

export interface TripItemEditDto {
  id: number;
  isPacked: boolean;
}

export interface TripCatalogItemReadDto {
  itemId: number;
  name?: string;
  categoryId: number;
  categoryName?: string;
  tripItemId?: number;
  isPacked?: boolean;
  status: ItemTripStatus;
}

