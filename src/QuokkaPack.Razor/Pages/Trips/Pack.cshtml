@page
@model QuokkaPack.RazorPages.Pages.Trips.PackModel
@{
    ViewData["Title"] = "Edit Trip Items";

    // Group only items that are actually part of the trip (have a TripItemId)
    var groupedItems = Model.Trip.Items
        .Where(item => item.TripItemId != null)
        .GroupBy(i => i.CategoryName)
        .OrderBy(g => g.Key);

    // Map TripItemId -> index in UpdatedItems so we can render by category
    // while still posting contiguous indices for model binding.
    var indexById = Model.UpdatedItems
        .Select((ti, i) => new { ti.Id, Index = i })
        .Where(x => x.Id != 0) // safety
        .ToDictionary(x => x.Id, x => x.Index);
}

<div class="container mt-4">
    <div class="p-3 rounded bg-light border position-relative">
        <a asp-page="/Trips/Edit" asp-route-id="@Model.Trip.Id" class="btn btn-sm btn-outline-secondary position-absolute top-0 end-0 m-2">
            Edit
        </a>

        <h2 class="mb-1">Packing for @Model.Trip.Destination</h2>
        <small class="text-muted">
            [@Model.Trip.StartDate.ToString("MMM dd, yyyy") &ndash; @Model.Trip.EndDate.ToString("MMM dd, yyyy")]
        </small>
    </div>
</div>

<div class="container mt-4">
    <form method="post" asp-page-handler="UpdatePackedStatus">
        <input type="hidden" asp-for="Id" />

        <div class="row row-cols-1 row-cols-md-2 g-4">
            @foreach (var categoryGroup in groupedItems)
            {
                var categoryName = categoryGroup.Key;
                var categoryId = $"category_{categoryName.Replace(" ", "_")}";

                <div class="col">
                    <div class="card h-100">
                        <div class="card-header d-flex align-items-center">
                            <label class="form-check-label fw-bold mb-0" for="@categoryId">@categoryName</label>
                        </div>
                        <div class="card-body">
                            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-2">
                                @foreach (var item in categoryGroup)
                                {
                                    // Skip if we somehow didn't seed this item into UpdatedItems
                                    if (item.TripItemId is null || !indexById.TryGetValue(item.TripItemId.Value, out var idx))
                                    {
                                        continue;
                                    }

                                    var checkboxId = $"item_{item.TripItemId}";

                                    <div class="col">
                                        <div class="form-check">
                                            <!-- Hidden id to bind TripItemId -->
                                            <input asp-for="UpdatedItems[idx].Id" type="hidden" />

                                            <!-- Checkbox binds to UpdatedItems[idx].Packed -->
                                            <input class="form-check-input"
                                                   asp-for="UpdatedItems[idx].IsPacked"
                                                   id="@checkboxId" />

                                            <label class="form-check-label" for="@checkboxId">
                                                @item.Name
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Update Packed Status</button>
        </div>
    </form>
</div>
